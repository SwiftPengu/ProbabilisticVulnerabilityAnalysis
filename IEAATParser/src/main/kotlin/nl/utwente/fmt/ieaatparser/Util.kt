package nl.utwente.fmt.ieaatparser

import java.util.*

infix inline fun <A,B,C> Pair<A,B>.let(op : ((A,B) -> C)) : C = op(this.first,this.second)

/**
 * Returns f() if the condition is true, else null
 */
infix inline fun <A> Boolean.invokeIfTrue(f : (() -> A)) : A? = if(this) f() else null

/**
 * Generates a random Long
 */
fun generateUUID() : Long = UUID.randomUUID().mostSignificantBits

fun <A,B> Pair<List<A>,List<B>>.destructurePartition() = Pair(this.first.single(),this.second.single())