@cached
operation const() : Any {
	var result = new Bag(); //dummy object, anything goes (extension properties are used), however Any() does not work
	
	////PVA
	result.~ASSET_TYPE = "AssetType";
	result.~DEFENCE_TYPE = "DefenceType";
	result.~DEFENCE_INSTANCE_ISFUNCTIONING = "DefenceIsFunctioning";
	result.~ATTACKSTEP_TYPE = "AttackStepType";
	result.~DEFENDED_BY = "DefendedBy";
	result.~ATTACKED_BY = "AttackedBy";
	result.~ATTACKSTEP_ENABLED = "attackPrerequisite";
	result.~ATTACKSTEP_SUCCEEDED = "attackStepSucceeded";
	result.~TEMPLATE_DEFINITION = "TemplateDefinition";
	result.~TEMPLATE_CONNECTION = "TemplateConnection";
	result.~CONCRETE_TYPE = "ConcreteType";
	result.~CONCRETE_CONNECTION = "ConcreteConnected";
	result.~VIRTUAL_CONNECTION = "VirtuallyConnected";
	result.~REVERSE_VIRTUAL_CONNECTION = "ReverseVirtuallyConnected";
	result.~TEMPLATE_CONNECTION_CONCRETE = "TemplateConnectionConcrete";
	result.~REACHABLE_ATTACK_STEP = "ReachAbleAttackStep";
	
	result.~TEMPLATE_INSTANCE = "TemplateInstance";
	result.~INSTANCE = "Instance";
	
	////PVAI constants
	// Templates
	result.~TEMPLATE_CONNECTION_INSTANCE = "TemplateConnectionInstance";
	
	// Concrete
	result.~ASSET_INSTANCE = "AssetInstance";
	result.~DEFENCE_INSTANCE = "DefenceInstance";
	result.~ATTACKSTEP_INSTANCE = "AttackStepInstance";
	result.~CONCRETE_CONNECTION_INSTANCE = "ConcreteConnectionInstance";
	result.~ENTRYPOINT = "EntryPoint";
	
	//// ProbLog constants
	// Distributions
	result.~DISTRIBUTION_GAMMA = "GammaCDF";
	result.~DISTRIBUTION_BERNOULLI = "Bernoulli";
	result.~DISTRIBUTION_NORMAL = "NormalPDF";
	result.~DISTRIBUTION_LOGNORMAL = "LogNormalCDF";
	result.~DISTRIBUTION_EXPONENTIALCDF = "ExpCDF";
	result.~DISTRIBUTION_LINEAR = "LinearApproximate";
	
	//// Evidence
	result.~HARD_EVIDENCE_TRUE = "hardEvidenceTrue";
	result.~HARD_EVIDENCE_FALSE = "hardEvidenceFalse";
	
	return result;
}