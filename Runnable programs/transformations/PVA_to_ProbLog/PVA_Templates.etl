//templateDefinition(X).
rule templateDefinitions
	transform templateDefinition : PVA!TemplateDefinition
	to stat : ProbLog!Rule {
		stat.atomArgumentFact(const().~TEMPLATE_DEFINITION,templateDefinition.name);
		program().statements.add(stat);
}

//
// Instantiation definitions ( Attack steps are implicit, an instance exists for every attack step for every legal target )
// 

rule defenceInstantiation
	transform typeInstantiation : PVA!TypeInstantiation
	to stat : ProbLog!Rule {
	guard : typeInstantiation.concretization->isKindOf(PVA!DefenceType)
	
	// defenceInstantiation(PortSecurity3,PortSecurity,TNetworkZone)
	cheat("defenceInstantiation("+
		typeInstantiation.name.prologize()+
		", "+
		typeInstantiation.concretization.name.prologize()+
		", "+
		typeInstantiation.eContainer().name.prologize()+").");
}

rule assetInstantiation
	transform typeInstantiation : PVA!TypeInstantiation
	to stat : ProbLog!Rule {
	guard : typeInstantiation.concretization->isKindOf(PVA!AssetType)
	
	cheat("assetInstantiation("+
		typeInstantiation.name.prologize()+
		", "+
		typeInstantiation.concretization.name.prologize()+
		", "+
		typeInstantiation.eContainer().name.prologize()+").");	
}

//Internal connections
//instantiationConnection(Role, (SourceKind,SourceID), (TargetKind, TargetID), TemplateDef)
rule instantiationConnection
	transform ic : PVA!InstantiationConnection
	to stat : ProbLog!Rule {
	
	cheat(
		"instantiationConnection("+
		ic.concretization.label.prologize() + ", (" + // Role of concreteconnection
		ic.eContainer().concretization.eClass().name.prologize() + ", " + // SourceKind
		ic.eContainer().name.prologize() + "), (" + // SourceID
		ic.target.concretization.eClass().name.prologize() + ", " + // TargetKind
		ic.target.name.prologize() + "), " + // TargetID
		ic.eContainer().eContainer().name.prologize() +
		")."
	);
}