package nl.utwente

import org.eclipse.epsilon.emc.emf.EmfModel
import org.eclipse.epsilon.emc.emf.EmfModelFactory
import org.eclipse.epsilon.etl.EtlModule
import java.io.File
import java.nio.file.Path
import kotlin.system.measureTimeMillis

fun pvaToProblog(pva : EmfModel, problog : EmfModel, etlPath : Path) {
    //Remove problog model file if it already exists
    performXtoProbLog(problog, listOf(pva), etlPath)
}

/**
 * Executes the given ETL script, which transforms either a PVA or a PVAI model to ProbLog
 */
private fun performXtoProbLog(output: EmfModel, source : List<EmfModel>, etlPath : Path) {
    val timing = measureTimeMillis {
        val etlmodule = EtlModule()
        etlmodule.context.modelRepository.apply {
            source.forEach { addModel(it) }
            addModel(output)
        }

        etlmodule.parse(etlPath.toFile())
        if (etlmodule.parseProblems.isEmpty()) {
            etlmodule.execute()
            //output.dispose() //flushes output
        } else {
            //Collect parse errors into an exception chain, and throw the chain
            throw etlmodule.parseProblems.fold(null as RuntimeException?, { child, problem ->
                RuntimeException(problem.toString(), child)
            }) ?: RuntimeException("Parse error")
        }
    }
    println("Transforming ${source.map { it.name }} to ProbLog took ${timing}ms")

}


fun pvaiToProblog(pva : EmfModel, pvai : EmfModel, problog : EmfModel, etlPath : Path) {
    //TODO create temp problog model for the output
    performXtoProbLog(problog, listOf(/*pva,*/ pvai), etlPath)
    pva.dispose()
    pvai.dispose()
}

fun loadEmfModel(id: String,modelLocation: String,metamodelFileURI: String,accessMode : EmfModelFactory.AccessMode) : EmfModel {
    val time = System.currentTimeMillis()
    val result = EmfModelFactory.getInstance().createEmfModel(
            id, File(modelLocation), File(metamodelFileURI), accessMode
    )
    result.load()
    println("Loading model $id took ${System.currentTimeMillis()-time}ms")
    return result
}