%
% Probability functions
%
%
Output::bernoulli(X) :- Output is X.

Output::expCDF(X,Lambda) :- X>=0, Output is 1-exp(-Lambda*X).

Output::normalPDF(X,Mu,StdDev) :- Output is exp(-((X-Mu)*(X-Mu))/(2*StdDev*StdDev)) / sqrt(2*StdDev*StdDev*pi).
Output::logNormalCDF(X,Loc,Scale) :- X>0, Output is 0.5 * erfc((Loc-log(X))/(sqrt(2) * Scale)).

linearApproximate(X,[(Point1X,Point1Y),(Point2X,Point2Y)|Tail]) :- linearApproximatePoint(X,(Point1X,Point1Y),(Point2X,Point2Y)).
linearApproximate(X,[(Point1X,Point1Y),(Point2X,Point2Y)|Tail]) :- linearApproximate(X,[(Point2X,Point2Y)|Tail]). %Drop first element
Output::linearApproximatePoint(X,(Point1X,Point1Y),(Point2X,Point2Y)) :- X >= Point1X, X < Point2X, Output is Point1Y + ((X - Point1X)/(Point2X - Point1X))*(Point2Y - Point1Y).

% Implementation of the logarithmic Gamma function from samtools (algorithm AS 245 by Macleod)
logGamma(Z,Output) :- Output is log(
	0.1659470187408462e-06 / (Z + 7)
	+ 0.9934937113930748e-05 / (Z + 6)
	- 0.1385710331296526 / (Z + 5)
	+ 12.50734324009056  / (Z + 4)
	- 176.6150291498386 / (Z + 3)
	+ 771.3234287757674 / (Z + 2)
	- 1259.139216722289 / (Z + 1)
	+ 676.5203681218835 / Z
	+ 0.9999999999995183
	) - 5.58106146679532777 - Z + (Z - 0.5) * log(Z + 6.5).

% The Gamma function, based on the logGamma function
gamma(Z,Output) :- logGamma(Z,LogG), Output is exp(LogG).

% The cumulative Gamma distribution
% Implementation based on Apache Commons-Math 3.6.1
% The value is estimated by repetitively adding elements from an infinite sum
% The convergence bound is hardcoded at 1e-04
Result::gammaCDF(X,Shape,Scale) :- X>0, regularizedGammaP(Shape, X/Scale, 100, Result).
regularizedGammaP(A,X,Maxiterations, Result) :- X>0,
    infiniteSum(A,X,Maxiterations,Interm),
	logGamma(A,LogG),
	Result is exp(-X + (A * log(X)) - LogG) * Interm.
infiniteSum(A,X,Steps,Result) :- Init is 1.0 / A, infiniteSum(A,X,Steps,0,Init,Init,Result).
infiniteSum(A,X,Steps,N,An,Sum,Sum) :- abs(An/Sum) =< 1e-04.
infiniteSum(A,X,0,N,An,Sum,Sum).
infiniteSum(A,X,Steps,N,An,Sum,Result) :- abs(An/Sum) > 1e-04,
	StepsN is Steps-1,
	NN is N+1,
	AnN is An * (X / (A + NN)),
	SumN is Sum + AnN,
	infiniteSum(A,X,StepsN,NN,AnN,SumN,Result).


%
% Shorthands using a 'workdays' parameter
%
%
expCDF(Lambda) :- workdays(X), expCDF(X,Lambda).
normalPDF(Mean,StdDev) :- workdays(X), normalPDF(X,Mean,StdDev).
logNormalCDF(Mean,StdDev) :- workdays(X), logNormalCDF(X,Mean,StdDev).
gammaCDF(Alpha,Beta) :- workdays(X), gammaCDF(X, Alpha, Beta).
linearApproximate(List) :- workdays(X), linearApproximate(X,List).

